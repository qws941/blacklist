version: '3.8'

services:
  postgres:
    image: registry.jclee.me/blacklist-postgres:latest
    container_name: blacklist-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=blacklist
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - TZ=Asia/Seoul
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - blacklist-network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d blacklist"]
      interval: 15s
      timeout: 5s
      start_period: 120s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  redis:
    image: registry.jclee.me/blacklist-redis:latest  
    container_name: blacklist-redis
    restart: unless-stopped
    command: redis-server /usr/local/etc/redis/redis.conf
    environment:
      - TZ=Asia/Seoul
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL,KEYS,PEXPIRE,DEL,EVAL,SHUTDOWN
      - REDIS_REPLICATION_DISABLED=yes
    volumes:
      - redis_data:/data
      - redis_run:/var/run/redis
      - ./redis-silent.conf:/usr/local/etc/redis/redis.conf
      - ./redis-backup:/backup
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    networks:
      - blacklist-network
    ports:
      - "32544:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      start_period: 30s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M

  app:
    image: registry.jclee.me/blacklist-app:latest
    container_name: blacklist-app
    restart: unless-stopped
    # No depends_on - service manages its own dependencies
    environment:
      - POSTGRES_HOST=blacklist-postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=blacklist
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - REDIS_HOST=blacklist-redis
      - REDIS_PORT=6379
      - FLASK_ENV=production
      - PORT=2542
      - TZ=Asia/Seoul
      - LOG_LEVEL=INFO
      - PYTHONUNBUFFERED=1
      # 프로덕션 최적화 설정
      - GUNICORN_WORKERS=3
      - GUNICORN_MAX_REQUESTS=1000
      - GUNICORN_TIMEOUT=60
      - GUNICORN_KEEPALIVE=5
      - GUNICORN_PRELOAD_APP=true
      # DB 연결 안정성 설정  
      - DB_RETRY_COUNT=5
      - DB_RETRY_DELAY=10
      - DB_POOL_SIZE=10
      - DB_MAX_OVERFLOW=20
      # 헬스체크 설정
      - HEALTH_CHECK_TIMEOUT=30
      - STARTUP_PROBE_DELAY=60
      # Built-in dependency management (updated)
      - DEPENDENCY_WAIT_MAX_ATTEMPTS=40
      - DEPENDENCY_WAIT_INTERVAL=3
      - SKIP_DEPENDENCY_WAIT=false
      # New feature toggle
      - ENABLE_ADVANCED_LOGGING=true
    volumes:
      - app_logs:/app/logs
      - app_data:/app/data
      - app_backup:/app/backup
    tmpfs:
      - /tmp:noexec,nosuid,size=200m
    networks:
      - blacklist-network
    ports:
      - "2542:2542"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:2542/health --max-time 15 || exit 1"]
      interval: 30s
      timeout: 15s
      start_period: 180s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 256M

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/blacklist/postgres-data
  redis_data:
    driver: local
    driver_opts:
      type: none  
      o: bind
      device: /opt/blacklist/redis-data
  redis_run:
  app_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/blacklist/app-logs
  app_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/blacklist/app-data
  app_backup:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/blacklist/app-backup

networks:
  blacklist-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
    driver_opts:
      com.docker.network.bridge.name: blacklist-br0